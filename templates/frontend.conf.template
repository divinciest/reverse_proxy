# HTTPS server for {{ domain }} (only for non-localhost domains)
{% if not domain.endswith('.localhost') and domain != 'localhost' %}
server {
    listen 443 ssl http2;
    server_name {{ domain }};
    
    # SSL Certificate
    ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Root directory
    root {{ static_path }};
    index index.html;
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application with SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets with extensions
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
    }
    
    access_log /var/log/nginx/{{ domain }}_access.log;
    error_log /var/log/nginx/{{ domain }}_error.log;
}
{% endif %}

# HTTP server for localhost domains (development mode)
{% if domain.endswith('.localhost') or domain == 'localhost' %}
server {
    listen 80;
    server_name {{ domain }};
    
    # Root directory
    root {{ static_path }};
    index index.html;
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Main application with SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets with extensions
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }
    }
    
    access_log /var/log/nginx/{{ domain }}_access.log;
    error_log /var/log/nginx/{{ domain }}_error.log;
}
{% endif %} 